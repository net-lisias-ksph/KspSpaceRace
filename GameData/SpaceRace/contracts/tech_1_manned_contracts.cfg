
CONTRACT_GROUP
{
	name = tech1_manned_main
	minVersion = 0.7.0
	//maxCompletions = 10
	maxSimultaneous = 10
}

//TTODO REDO calculations
// 40 research points to distribute
//30 set
//10 -> 5 for how to make "crew report" -&-> 5 to the other challenge (cf bottom)

CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = tech1m_unlock
    title = Launch a frog in space
    group = tech1_manned_main
    description = Some of us thing a frog would explode if put in microgravity. We must try it!
    notes = Put our special cannister into sapce and recover it. 
    synopsis = [Manned flight path] [UNLOCK TECH] Manned flight
    completedMessage = It's still alive, incredible!
	
    agent = Integrated Integrals
    minExpiry = 0.0 //500.0
    maxExpiry = 0.0 //1000.0
    cancellable = true
    declinable = true
    prestige = Exceptional
    targetBody = Kerbin
    maxCompletions = 1
    maxSimultaneous = 1
    rewardScience = 5.0
    rewardReputation = 0.0
    rewardFunds = 20000.0
    failureReputation = 0.0
    failureFunds = 0.0
    advanceFunds = 10000.0
    // The weight is used in the contract generation process
    weight = 10.0

	
	
    REQUIREMENT
    {
		name = require_contract_tech1m_unlock
        type = CompleteContract
		contractType = tech0_end
		minCount = 1
		maxCount = 1
		cooldownDuration = 0s//10d
    }
	PARAMETER
	{
		name = VesselParameterGroup_tech1m_unlock_space
		type = VesselParameterGroup
		title = frog vessel in space
		duration = 10s
		define = frogVessel_tech1m_unlock
	   // vessel = Vessel Key
		PARAMETER
		{
			name = PartValidation_tech1m_unlock
			type = PartValidation
			part = frogCannister
		}
		PARAMETER
		{
			name = ReachState_tech1m_unlock
			type = ReachState
			minAltitude = 70000
			targetBody = Kerbin
		}
	}
	
	PARAMETER
	{
		name = VesselParameterGroup_tech1m_unlock_return
		type = VesselParameterGroup
		title = frog vessel return to home
		//duration = 5s
		//define = frogVessel_tech1m_unlock
	    vessel = frogVessel_tech1m_unlock
		PARAMETER
		{
			name = ReturnHome_tech1m_unlock
			type = ReturnHome
		}
	}
		
	
	BEHAVIOUR
	{
		name = ExperimentalPart_tech1m_unlock_parachute
		type = ExperimentalPart
		part = parachuteSingle
	}
	BEHAVIOUR
	{
		name = ExperimentalPart_tech1m_unlock_frogCannister
		type = ExperimentalPart
		part = frogCannister
	}
	BEHAVIOUR
	{
		name = UnlockTech_tech1m_unlock
		type = UnlockTech
		techID = mannedFlight
	}
	
	BEHAVIOUR
	{
		name = wr_animal
		type = BehaviorWorldRecord
		WRname = animal
		bonusFund = 5000
	}
}


CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = tech1m_kerbal_space
    title = Launch a Kerbal in space
    group = tech1_manned_main
    description = To see Kerbin like anyone else.
    notes = How to: If you can't have time to deploy the chutes, target water, try without a heat shield to reduce the mass, and with the minimum of snacks, or try to reeter at ~40km.
    synopsis = [Manned flight path]
    completedMessage = He's still alive, incredible!
	
    agent = Integrated Integrals
    minExpiry = 0.0 //500.0
    maxExpiry = 0.0 //1000.0
    cancellable = true
    declinable = true
    prestige = Significant
    targetBody = Kerbin
    maxCompletions = 1
    maxSimultaneous = 1
    rewardScience = 5.0
    rewardReputation = 0.0
    rewardFunds = 20000.0
    failureReputation = 0.0
    failureFunds = 0.0
    advanceFunds = 20000.0
    // The weight is used in the contract generation process
    weight = 10.0

    REQUIREMENT
    {
		name = require_contract_tech1m_kerbal_space
        type = CompleteContract
		contractType = tech1m_unlock
		minCount = 1
		maxCount = 1
		cooldownDuration = 0s//10d
    }
	PARAMETER
	{
		name = VesselParameterGroup_tech1m_kerbal_space
		type = VesselParameterGroup
		title = Kerbal vessel in space
		duration = 10s
		define = manVessel_tech1m_kerbal_space
	   // vessel = Vessel Key
		PARAMETER
		{
			name = PartValidation_tech1m_kerbal_space
			type = PartValidation
			part = mk1pod
		}
		PARAMETER
		{
			name = ReachState_tech1m_kerbal_space
			type = ReachState
			minAltitude = 70000
			targetBody = Kerbin
		}
	}
	
	PARAMETER
	{
		name = VesselParameterGroup_tech1m_kerbal_space
		type = VesselParameterGroup
		title = Kerbal vessel return to home
		//duration = 10s
		//define = manVessel_tech1m_kerbal_space
	    vessel = manVessel_tech1m_kerbal_space
		PARAMETER
		{
			name = ReturnHome_tech1m_kerbal_space
			type = ReturnHome
		}
	}
	
	BEHAVIOUR
	{
		name = wr_kerbalspace
		type = BehaviorWorldRecord
		WRname = kerbal_space
		bonusFund = 15000
	}
}

CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = tech1m_kerbal_orbit
    title = Launch a Kerbal in orbit
    group = tech1_manned_main
    description = To see Kerbin like anyone else.
    notes = How to: build a bigger rocket. You have to bring with you your heat shield
    synopsis = [Manned flight path] [UNLOCK TECH] Eva
    completedMessage = He's still alive, incredible!
	
    agent = Integrated Integrals
    minExpiry = 0.0 //500.0
    maxExpiry = 0.0 //1000.0
    cancellable = true
    declinable = true
    prestige = Significant
    targetBody = Kerbin
    maxCompletions = 1
    maxSimultaneous = 1
    rewardScience = 2.0
    rewardReputation = 0.0
    rewardFunds = 40000.0
    failureReputation = 0.0
    failureFunds = 0.0
    advanceFunds = 40000.0
    // The weight is used in the contract generation process
    weight = 10.0

    REQUIREMENT
    {
		name = require_contract_tech1m_kerbal_orbit
        type = CompleteContract
		contractType = tech1m_kerbal_space
		minCount = 1
		maxCount = 1
		cooldownDuration = 0s//10d
    }
	PARAMETER
	{
		name = VesselParameterGroup_tech1m_kerbal_orbit
		type = VesselParameterGroup
		title = Kerbal vessel in orbit
		duration = 10s
		define = manVessel_tech1m_kerbal_orbit
	   // vessel = Vessel Key
		PARAMETER
		{
			name = PartValidation_tech1m_kerbal_orbit
			type = PartValidation
			part = mk1pod
		}
		PARAMETER
		{
			name = ReachState_tech1m_kerbal_orbit
			type = ReachState
			situation = ORBITING
			targetBody = Kerbin
		}
	}
	
	PARAMETER
	{
		name = VesselParameterGroup_tech1m_kerbal_orbit
		type = VesselParameterGroup
		title = Kerbal vessel return to home
		//duration = 10s
		//define = manVessel_tech1m_kerbal_orbit
	    vessel = manVessel_tech1m_kerbal_orbit
		PARAMETER
		{
			name = ReturnHome_tech1m_kerbal_orbit
			type = ReturnHome
		}
	}
	
	//unlock a space suit?
	BEHAVIOUR
	{
		name = UnlockTech_tech1m_eva
		type = UnlockTech
		techID = eva
	}
	
	BEHAVIOUR
	{
		name = wr_kerbalorbit
		type = BehaviorWorldRecord
		WRname = kerbal_orbit
		bonusFund = 10000
	}
}

CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = tech1m_eva
    title = Make a extravehicular trip
    group = tech1_manned_main
    description = Use the hatch to test our new spacesuit! Be careful to grab firmly the ladder.
    notes = Eva!
    synopsis = [Manned flight path]
    completedMessage = No leak? fffiou, we're lucky. Now we are ready grab science from the goo canister ! (need a scientist)
	
    agent = Integrated Integrals
    minExpiry = 0.0 //500.0
    maxExpiry = 0.0 //1000.0
    cancellable = true
    declinable = true
    prestige = Significant
    //targetBody = Kerbin
    maxCompletions = 1
    maxSimultaneous = 1
    rewardScience = 5.0
    rewardReputation = 0.0
    rewardFunds = 0.0
    failureReputation = 0.0
    failureFunds = 0.0
    advanceFunds = 0.0
    // The weight is used in the contract generation process
    weight = 3.0
	
    REQUIREMENT
    {
		name = require_contract_tech1m_eva
        type = CompleteContract
		contractType = tech1m_kerbal_orbit
		minCount = 1
		maxCount = 1
		cooldownDuration = 0s//10d
    }
	PARAMETER
	{
		name = VesselIsType_tech1m_eva
		type = VesselIsType
		vesselType = EVA
	}
	BEHAVIOUR
	{
		name = wr_kerbalorbit
		type = BehaviorWorldRecord
		WRname = kerbal_eva
		bonusFund = 10000
	}
}


CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = tech1m_Encounter
    title = Fly two pod close in orbit
    group = tech1_manned_main
    description = Can you take a photo of an other pod orbiting around kerbin? it's for my daughter's birthday.
    notes = How to: Put your first craft in a mostly high orbit ~ 150k. Put your second craft in a lower orbit ~110k, each of them with an hypergolic engine, as we don't want to lost them in space. Then, wait some times (not too long) for your second ship to almost reach the first vessel (like 20-45Â°) and click on the first vessel to make it your target. Create a maneuver node, to increase the pe. Move the maneuver node to make the two dot very close (<2km). If you can't do that, try with a higher pe or wait a little more. When you come close to the other vessel, burn at !target to reduce your relative velocity.
    synopsis = [Manned flight path][UNLOCK TECH] Docking
    completedMessage = You forgot the flash! blah, you're disappointing.
	
    agent = Integrated Integrals
    minExpiry = 0.0 //500.0
    maxExpiry = 0.0 //1000.0
    cancellable = true
    declinable = true
    prestige = Significant
    targetBody = Kerbin
    maxCompletions = 1
    maxSimultaneous = 1
    rewardScience = 5.0
    rewardReputation = 0.0
    rewardFunds = 0.0
    failureReputation = 0.0
    failureFunds = 0.0
    advanceFunds = 0.0
    // The weight is used in the contract generation process
    weight = 5.0

    REQUIREMENT
    {
		name = require_contract_tech1m_docking
        type = CompleteContract
		contractType = tech1m_kerbal_orbit
    }
	PARAMETER
	{
		name = VesselParameterGroup_tech1m_docking
		type = VesselParameterGroup
		title = Vessel dock test 1
		duration = 10s
		define = vessel_tech1m_docking_v1
	   // vessel = Vessel Key
		PARAMETER
		{
			name = PartValidation_tech1m_docking_v1
			type = PartValidation
			part = dockingPort3
		}
		PARAMETER
		{
			name = ReachState_tech1m_docking_v1
			type = ReachState
			situation = ORBITING
			targetBody = Kerbin
		}
	}
	PARAMETER
	{
		name = VesselParameterGroup_tech1m_unlock_space
		type = VesselParameterGroup
		title = Vessel dock test 2
		duration = 10s
		define = vessel_tech1m_docking_v2
		PARAMETER
		{
			name = PartValidation_tech1m_docking_v2
			type = PartValidation
			part = dockingPort3
		}
		PARAMETER
		{
			name = ReachState_tech1m_docking_v2
			type = ReachState
			situation = ORBITING
			targetBody = Kerbin
		}
	}
	
	PARAMETER
	{
		name = Rendezvous_tech1m_unlock
		type = Rendezvous
		vessel = vessel_tech1m_docking_v1
		vessel = vessel_tech1m_docking_v2
		distance = 500.0
	}
	
	BEHAVIOUR
	{
		name = ExperimentalPart_tech1m_docking
		type = ExperimentalPart
		part = dockingPort3
	}
	BEHAVIOUR
	{
		name = UnlockTech_tech1m_docking
		type = UnlockTech
		techID = docking
	}
}

CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = tech1m_docking
    title = Dock two vessel together
    group = tech1_manned_main
    description = Maybe two ship can be attached together in space?
    notes = How to: Put at least 8 rcs on your craft, 4 at each end (or 4 at the center of mass). For your encounter, you can try to be more efficient by launching when the other vessel is near the kerbals pace center. When you're near the other vessel, you can target (by click) the docking node of the other vessel. GO near it, and rotate to be "aligned" with it (red mark, bless the Docking Alignment Indicator plugin). THen, use the sas to keep this direction, and use ijklhn to face it and then dock.
    synopsis = [Manned flight path]
    completedMessage = Our next pod should have a crew docking port, to shake hands without suits.
	
    agent = Integrated Integrals
    minExpiry = 0.0 //500.0
    maxExpiry = 0.0 //1000.0
    cancellable = true
    declinable = true
    prestige = Significant
    targetBody = Kerbin
    maxCompletions = 1
    maxSimultaneous = 1
    rewardScience = 10.0
    rewardReputation = 0.0
    rewardFunds = 0.0
    failureReputation = 0.0
    failureFunds = 0.0
    advanceFunds = 0.0
    // The weight is used in the contract generation process
    weight = 5.0

    REQUIREMENT
    {
		name = require_contract_tech1m_docking
        type = CompleteContract
		contractType = tech1m_unlock
    }
	PARAMETER
	{
		name = VesselParameterGroup_tech1m_docking
		type = VesselParameterGroup
		title = Vessel dock test 1
		duration = 10s
		define = vessel_tech1m_docking_v1
	   // vessel = Vessel Key
		PARAMETER
		{
			name = PartValidation_tech1m_docking_v1
			type = PartValidation
			part = dockingPort3
		}
		PARAMETER
		{
			name = ReachState_tech1m_docking_v1
			type = ReachState
			situation = ORBITING
			targetBody = Kerbin
		}
	}
	PARAMETER
	{
		name = VesselParameterGroup_tech1m_unlock_space
		type = VesselParameterGroup
		title = Vessel dock test 2
		duration = 10s
		define = vessel_tech1m_docking_v2
		PARAMETER
		{
			name = PartValidation_tech1m_docking_v2
			type = PartValidation
			part = dockingPort3
		}
		PARAMETER
		{
			name = ReachState_tech1m_docking_v2
			type = ReachState
			situation = ORBITING
			targetBody = Kerbin
		}
	}
	
	PARAMETER
	{
		name = Rendezvous_tech1m_unlock
		type = Rendezvous
		vessel = vessel_tech1m_docking_v1
		vessel = vessel_tech1m_docking_v2
		distance = 2500.0
	}
	
	PARAMETER
	{
		name = Docking_tech1m_unlock
		type = Docking
		vessel = vessel_tech1m_docking_v1
		vessel = vessel_tech1m_docking_v2
		defineDockedVessel = Docking vessels
	}	
	
	BEHAVIOUR
	{
		name = ExperimentalPart_tech1m_docking
		type = ExperimentalPart
		part = dockingPort3
	}
	BEHAVIOUR
	{
		name = UnlockTech_tech1m_docking
		type = UnlockTech
		techID = docking
	}
}

//challenge : docking & swapping place
//or just the last contract? (eva + docking)
// need to find an other way to select kerbals
CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = tech1m_docking_challenge
    title = Launch a frog in space
    group = tech1_manned_main
    description = Maybe two ship can be attached together in space?
    notes = [Manned flight path][UNLOCK TECH] Docking
    synopsis = Launch two vessel and dock them together
    completedMessage = Our next pod should have a crew port, to shake hands.
	
    agent = Integrated Integrals
    minExpiry = 0.0 //500.0
    maxExpiry = 0.0 //1000.0
    cancellable = true
    declinable = true
    prestige = Trivial
    targetBody = Kerbin
    maxCompletions = 1
    maxSimultaneous = 1
    rewardScience = 5.0
    rewardReputation = 0.0
    rewardFunds = 0.0
    failureReputation = 0.0
    failureFunds = 0.0
    advanceFunds = 0.0
    // The weight is used in the contract generation process
    weight = 5.0

    REQUIREMENT
    {
		name = require_contracttech1m_docking_challenge
        type = CompleteContract
		contractType = tech1m_docking
    }
	PARAMETER
	{
		name = VesselParameterGrouptech1m_docking_challenge_v1
		type = VesselParameterGroup
		title = Vessel dock test 1
		define = vessel_tech1m_docking_challenge_v1
	   // vessel = Vessel Key
		PARAMETER
		{
			name = ReachState_tech1m_docking_challenge_v1
			type = ReachState
			situation = ORBITING
			targetBody = Kerbin
		}
		PARAMETER
		{
			name = HasCrew_tech1m_docking_challenge_v1
			type = HasCrew
			kerbal = Jebediah Kerman
		}
	}
	PARAMETER
	{
		name = VesselParameterGroup_tech1m_docking_challenge_v2
		type = VesselParameterGroup
		title = Vessel dock test 2
		define = vessel_tech1m_docking_challenge_v2
		PARAMETER
		{
			name = ReachState_tech1m_docking_challenge_v2
			type = ReachState
			situation = ORBITING
			targetBody = Kerbin
		}
		PARAMETER
		{
			name = HasCrew_tech1m_docking_challenge_v1
			type = HasCrew
			trait = Pilot
		}
	}
	
	PARAMETER
	{
		name = VesselParameterGroup_tech1m_docking_challenge_v2_2
		type = VesselParameterGroup
		title = Vessel dock test 1
		duration = 1s
		vessel = vessel_tech1m_docking_challenge_v2
		PARAMETER
		{
			name = ReachState_tech1m_docking_challenge_v2_2
			type = ReachState
			situation = ORBITING
			targetBody = Kerbin
		}
		PARAMETER
		{
			name = HasCrew_tech1m_docking_challenge_v2_2
			type = HasCrew
			kerbal = Jebediah Kerman
		}
	}
	
	PARAMETER
	{
		name = RecoverKerbal_tech1m_docking_challenge
		type = RecoverKerbal
		kerbal = Jebediah Kerman
	}
	
	BEHAVIOUR
	{
		name = ExperimentalPart_tech1m_docking
		type = ExperimentalPart
		part = dockingPort3
	}
	BEHAVIOUR
	{
		name = UnlockTech_tech1m_docking
		type = UnlockTech
		techID = docking
	}
}

// TODO : challenge : dock to a satelite and recover it to kerbin!

// behavour spawn vessel
//paramter launch kerbal to orbit with crew
// parameter dock to it
// parameter recover spawned vessel



////////////////////// ===================== Tourist contract ================= //////////////////////////////////////

CONTRACT_GROUP
{
	name = touristType1
	minVersion = 0.7.0
	// maxCompletions = 10
	maxSimultaneous = 3
}

// CONTRACT_TYPE
// {
    // name = tourist_nop
    // title = No tourist in our training center
    // group = touristType1
    // description = A rich tourist want to see Kerbin from space.
    // notes = notes
    // synopsis = [Commercial contract]
    // completedMessage = Good job, he's happy.
	
    // agent = Integrated Integrals
    // minExpiry = 1.0 //in day (kerbal?)
    // maxExpiry = 4.0
	// deadline = 1
    // cancellable = true
    // declinable = true
    // prestige = Trivial
    // targetBody = Kerbin
    // maxCompletions = 0
    // maxSimultaneous = 1
    // rewardScience = 0.0
    // rewardReputation = 0.0
    // rewardFunds = 0.0
    // failureReputation = 0.0
    // failureFunds = 0.0
    // advanceFunds = 0.0
    // // The weight is used in the contract generation process
    // weight = 100.0
	
    // REQUIREMENT
    // {
		// name = require_contract_tourist_suborbit
        // type = CompleteContract
		// contractType = tech1m_kerbal_space //tech1p_polar
		// minCount = 1
		// maxCount = 1
		// cooldownDuration = 0s//10d
    // }
	
	// //TODO: proper orbit plan like in stock?
	// // at least pe and ap
	// PARAMETER
	// {
		// name = CommSat1
		// type = VesselParameterGroup
		// define = TouristPod
		// disableOnStateChange = false
		// PARAMETER
		// {
			// name = Orbit
			// type = Orbit
			// minPeA = 100000
			// //circular, almost
			// maxEccentricity = 0.004
			// //equatorial
			// maxInclination = 1
		// }
	// }    
// }


CONTRACT_TYPE
{
    name = tourist_suborbit
    title = Launch a tourist into space
    group = touristType1
    description = A rich tourist want to see Kerbin from space.
    notes = Be quick before he go bankrupt.
    synopsis = [Commercial contract]
    completedMessage = Good job, he's happy.
	
    agent = Integrated Integrals
    minExpiry = 1.0 //in day (kerbal?)
    maxExpiry = 4.0
	deadline = 1
    cancellable = true
    declinable = true
    prestige = Trivial
    targetBody = Kerbin
    maxCompletions = 0
    maxSimultaneous = 1
    rewardScience = 0.0
    rewardReputation = 0.0
    rewardFunds = 40000.0
    failureReputation = 0.0
    failureFunds = 0.0
    advanceFunds = 0.0
    // The weight is used in the contract generation process
    weight = 5.0
	
    // REQUIREMENT
    // {
		// name = require_contract_tourist_suborbit
        // type = CompleteContract
		// contractType = tech1m_kerbal_space //tech1p_polar
		// minCount = 1
		// cooldownDuration = 0s//10d
    // }
    REQUIREMENT
    {
		name = require_time_tourist_suborbit
        type = AleatTime
		contractTimeType = tourist_suborbit
    }
	PARAMETER
	{
		name = VesselParameterGrouptech1m_tourist_suborbit
		type = VesselParameterGroup
		title = Tourist vessel
		define = vessel_tech1m_docking_challenge_v1
	   // vessel = Vessel Key
		PARAMETER
		{
			name = ReachState_tech1m_tourist_suborbit
			type = ReachState
			minAltitude = 75000
			targetBody = Kerbin
		}
		PARAMETER
		{
			name = HasCrew_tech1m_tourist_suborbit
			type = HasCrew
			trait = tourist
		}
	} 
	BEHAVIOUR
	{
		name = SendMessage_tourist_suborbit
		type = BehaviourSendMessage
		message = A customer want to go in space!
	}
	BEHAVIOUR
	{
		name = AddTime_tourist_suborbit
		type = BehaviourAleatTime
		minHours = 32 //1 day ~half
		maxHours = 512 // 21 day
		contractTimeType = tourist_suborbit
	}
	//TODO spawn a tourist (and for the next contract also)
}

CONTRACT_TYPE
{
    name = tourist_orbit
    title = Launch a tourist in orbit
    group = touristType1
    description = A rich tourist want to see Kerbin from space, and at least for a day.
    notes = Be quick before he go bankrupt.
    synopsis = [Commercial contract]
    completedMessage = Good job, he's happy.
	
    agent = Integrated Integrals
    minExpiry = 1.0 //in day (kerbal?)
    maxExpiry = 4.0
	deadline = 1
    cancellable = true
    declinable = true
    prestige = Trivial
    targetBody = Kerbin
    maxCompletions = 0
    maxSimultaneous = 1
    rewardScience = 0.0
    rewardReputation = 0.0
    rewardFunds = 100000.0
    failureReputation = 0.0
    failureFunds = 0.0
    advanceFunds = 0.0
    // The weight is used in the contract generation process
    weight = 5.0
    // REQUIREMENT
    // {
		// name = require_contract_tourist_orbit
        // type = CompleteContract
		// contractType = tech1m_kerbal_orbit
		// minCount = 1
		// cooldownDuration = 0s
    // }
    // REQUIREMENT
    // {
		// name = require_contract_tourist_orbit2
        // type = CompleteContract
		// contractType = tourist_suborbit
		// minCount = 1
		// cooldownDuration = 0s
    // }
    // REQUIREMENT
    // {
		// name = require_time_tourist_orbit
        // type = AleatTime
		// contractTimeType = tourist_orbit
    // }
    REQUIREMENT
    {
		name = require_time_tourist_orbit
        type = AleatTime
		contractTimeType = tourist_orbit
    }
	
	PARAMETER
	{
		name = VesselParameterGrouptech1m_tourist_orbit
		type = VesselParameterGroup
		title = Tourist vessel
		define = vessel_tech1m_docking_challenge_v1
	   // vessel = Vessel Key
		PARAMETER
		{
			name = ReachState_tech1m_tourist_orbit
			type = ReachState
			situation = ORBITING
			targetBody = Kerbin
			//TODO: add a 'day' (at least 2 rotation) to succeed the contract (or less if it's not possible to unfocus the vessel)
		}
		PARAMETER
		{
			name = HasCrew_tech1m_tourist_orbit
			type = HasCrew
			trait = tourist
		}
	} 
	BEHAVIOUR
	{
		name = SendMessage_tourist_orbit
		type = BehaviourSendMessage
		message = A customer want to go in orbit!
	}
	BEHAVIOUR
	{
		name = AddTime_tourist_orbit
		type = BehaviourAleatTime
		minHours = 64 // ~3 days
		maxHours = 1024 // 42 days
		contractTimeType = tourist_orbit
	}
}

