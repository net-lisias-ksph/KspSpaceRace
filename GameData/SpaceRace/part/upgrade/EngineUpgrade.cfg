// Powered by ialdabaoth and sarbian's ModuleManager

@PART[engine_*]:FOR[SpaceRace]
{
	!MODULE[ModuleAlternator]{}
	!MODULE[ModuleGimbal]{}
}

//remove "monoprop"
@PART[engine_*]:HAS[@MODULE[ModuleEngine*]:HAS[@PROPELLANT[MonoPropellant]]]:FOR[SpaceRace]
{
    @MODULE[ModuleEngines*]
    {
		!PROPELLANT[MonoPropellant]{}
		PROPELLANT
		{
			name = LiquidFuel
			ratio = 0.9
			DrawGauge = True
		}
		PROPELLANT
		{
			name = Oxidizer
			ratio = 1.1
		}
    }
}

/// =================================================== U ===========================================================


// @PART[engine_??UV]:FOR[SpaceRace]
// {
	// PLUME
    // {
        // name = Hypergolic-Upper          //pre-fabbed plume you want
        // transformName = thrustTransform //which transform to attach the plume
        // localRotation = 0,0,0           //Optional - Any rotation needed
        // localPosition = 0,0,0           //Any offset needed
        // fixedScale = 1                  //Size adjustment to resize to engine
        // energy = 1                      //Adjust length of plume
        // speed = 1                       //Adjust speed to fit resize, 
                                        // //generally close to 1:1 with scale.
    // }
    // @MODULE[ModuleEngines*]
    // {
        // @name = ModuleEnginesFX
        // %powerEffectName = Hypergolic-Upper
		// @runningEffectName = 
    // }
// }
	
// @PART[engine_??UA]:FOR[SpaceRace]
// {
	// PLUME
    // {
        // name = Hypergolic-Lower            //pre-fabbed plume you want
        // transformName = thrustTransform //which transform to attach the plume
        // localRotation = 0,0,0           //Optional - Any rotation needed
        // localPosition = 0,0,0           //Any offset needed
        // fixedScale = 1                  //Size adjustment to resize to engine
        // energy = 1                      //Adjust length of plume
        // speed = 1                       //Adjust speed to fit resize, 
                                        // //generally close to 1:1 with scale.
    // }
    // @MODULE[ModuleEngines*]
    // {
        // @name = ModuleEnginesFX
        // %powerEffectName = Hypergolic-Lower
		// @runningEffectName = 
    // }
// }

@PART[engine_05UA]:FOR[SpaceRace]
{
	@cost = 2250//2700 //thrust * 33 +150
	@mass = 0.3 //TWR : 20->100
	%bulkheadProfiles = size0
	//TODO: node_stack_top  node size to 0
	//TODO: node_stack_bottom  node size to 0
	@MODULE[ModuleEngine*]
	{
		@minThrust = 63
		@maxThrust = 63
		@atmosphereCurve
		{
			@key,0 = 0 250
			@key,1 = 1 230
			key = 7 0.01
		}
	}
}

@PART[engine_05UV]:FOR[SpaceRace]
{
	@cost = 480//2000
	@mass = 0.05 //TWR : 20->100
	%bulkheadProfiles = size0
	//TODO: node_stack_top  node size to 0
	//TODO: node_stack_bottom  node size to 0
	@MODULE[ModuleEngine*]
	{
		@minThrust = 10
		@maxThrust = 10
		@heatProduction = 500 //stock 192
		@atmosphereCurve
		{
			@key,0 = 0 280
			@key,1 = 1 140
			key = 7 0.01
		}
	}
}

/////////////////////////////////////// size 1
@PART[engine_10UA]:FOR[SpaceRace]
{
	@cost = 7800 //5000
	@mass = 1.5 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 300
		@maxThrust = 300
		@atmosphereCurve
		{
			@key,0 = 0 252
			@key,1 = 1 232
			key = 7 0.01
		}
	}
}

@PART[engine_10UV]:FOR[SpaceRace]
{
	@cost = 1500//2500
	@mass = 0.2 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 40
		@maxThrust = 40
		@atmosphereCurve
		{
			@key,0 = 0 282
			@key,1 = 1 142
			key = 7 0.01
		}
	}
}


/////////////////////////////////////// size 1.5
@PART[engine_15UA]:FOR[SpaceRace]
{
	@cost = 16000 //10000
	@mass = 4 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 800
		@maxThrust = 800
		@atmosphereCurve
		{
			@key,0 = 0 254
			@key,1 = 1 234
			key = 7 0.01
		}
	}
}

@PART[engine_15UV]:FOR[SpaceRace]
{
	@cost = 3750 //3500
	@mass = 0.7 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 140
		@maxThrust = 140
		@atmosphereCurve
		{
			@key,0 = 0 284
			@key,1 = 1 144
			key = 7 0.01
		}
	}
}

/////////////////////////////////////// size 2
@PART[engine_20UA]:FOR[SpaceRace]
{
	@cost = 21000 //16000
	@mass = 7 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 1400
		@maxThrust = 1400
		@atmosphereCurve
		{
			@key,0 = 0 256
			@key,1 = 1 236
			key = 7 0.01
		}
	}
}

@PART[engine_20UV]:FOR[SpaceRace]
{
	@cost = 6600//6500
	@mass = 2 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 400
		@maxThrust = 400
		@atmosphereCurve
		{
			@key,0 = 0 286
			@key,1 = 1 146
			key = 7 0.01
		}
	}
}

/////////////////////////////////////// size 3
@PART[engine_30UA]:FOR[SpaceRace]
{
	@cost = 30000//26000
	@mass = 12 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 2400
		@maxThrust = 2400
		@atmosphereCurve
		{
			@key,0 = 0 258
			@key,1 = 1 238
			key = 7 0.01
		}
	}
}

@PART[engine_30UV]:FOR[SpaceRace]
{
	@cost = 12000//9000
	@mass = 3.4 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 680
		@maxThrust = 680
		@atmosphereCurve
		{
			@key,0 = 0 288
			@key,1 = 1 148
			key = 7 0.01
		}
	}
}

/////////////////////////////////////// size 4
@PART[engine_40UA]:FOR[SpaceRace]
{
	@cost = 55000//26000
	@mass = 28 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 5600
		@maxThrust = 5600
		@atmosphereCurve
		{
			@key,0 = 0 260
			@key,1 = 1 240
			key = 7 0.01
		}
	}
}

@PART[engine_40UV]:FOR[SpaceRace]
{
	@cost = 19000//9000
	@mass = 5.6 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 1120
		@maxThrust = 1120
		@atmosphereCurve
		{
			@key,0 = 0 290
			@key,1 = 1 150
			key = 7 0.01
		}
	}
}

@PART[engine_??UA]:FOR[SpaceRace]
{
	// @MODULE[ModuleEngine*]
	// {
		// @minThrust = #$/MODULE[ModuleEngine*]/maxThrust$
		// @atmosphereCurve
		// {
			// @key,0 = 0 260
			// @key,1 = 1 240
			// key = 7 0.01
		// }
	// }
	// MODULE
	// {
		// name = ModuleEngineBellSwitch
		// aslCurve
		// {
			// key = 0 260
			// key = 1 240
			// key = 7 0.01
		// }
		// vacCurve
		// {
			// key = 0 280
			// key = 1 160
			// key = 7 0.01
		// }
	// }
	MODULE
	{
		name = ModuleEngineBellSwitchAdd
		addVac = 20
		addAsl = -80
	}
}

@PART[engine_??U*]:AFTER[SpaceRace]
{
	!MODULE[ModuleSimpleEngineIgniter]{}
	MODULE
	{
		name = ModuleSimpleEngineIgniter
		freeRestart = True
		// lol = True
		// lol2 = False
		// lol3 = True
		// canStage = False
	}
	MODULE
	{
		name = ModuleUpgradeCost
		TECH-VALUE
		{
			%upgradeHypergol1 = #$/cost$
			@upgradeHypergol1 *= 0.7
			%upgradeHypergol2 = #$/cost$
			@upgradeHypergol2 *= 0.5
		}
	}
	MODULE
	{
		name = ModuleUpgradeMass
		TECH-VALUE
		{
			%upgradeHypergol1 = #$/mass$
			@upgradeHypergol1 *= 0.5
			%upgradeHypergol2 = #$/mass$
			@upgradeHypergol2 *= 0.25
		}
	}
	MODULE
	{
		name = ModuleUpgradeEngine
		TECH-VALUE
		{
			tech = upgradeHypergol1
			minThrust = #$/MODULE[ModuleEngine*]/minThrust$
			@minThrust *= 0.4
			maxThrust = #$/MODULE[ModuleEngine*]/maxThrust$
			@maxThrust *= 1.1
			atmosphereIsp = #$/MODULE[ModuleEngine*]/atmosphereCurve/key,1[1, ]$
			@atmosphereIsp += 20
			vacuumIsp = #$/MODULE[ModuleEngine*]/atmosphereCurve/key,0[1, ]$
			@vacuumIsp += 20
			// heatProduction = #$/MODULE[ModuleEngine*]/heatProduction$
			// @heatProduction *= 0.7
		}
		TECH-VALUE
		{
			tech = upgradeHypergol2
			//minThrust = #$/MODULE[ModuleEngine*]/minThrust$
			//@minThrust *= 0.2
			minThrust = 0
			maxThrust = #$/MODULE[ModuleEngine*]/maxThrust$
			@maxThrust *= 1.2
			atmosphereIsp = #$/MODULE[ModuleEngine*]/atmosphereCurve/key,1[1, ]$
			@atmosphereIsp += 40
			vacuumIsp = #$/MODULE[ModuleEngine*]/atmosphereCurve/key,0[1, ]$
			@vacuumIsp += 40
			// heatProduction = #$/MODULE[ModuleEngine*]/heatProduction$
			// @heatProduction *= 0.5
		}
	}
	// MODULE
	// {
		// name = ModuleUpgradeModule
		// type = create
		// tech = fuelcell
		// MODULE
		// {
			// name = ModuleAlternator
			// RESOURCE
			// {
				// name = ElectricCharge
				// rate = #$/MODULE[ModuleEngine*]/maxThrust$
				// @rate /= 10
			// }
		// }
	// }
	MODULE
	{
		name = ModuleUpgradeModule
		type = create
		tech = upgradeEngine1
		MODULE
		{
			name = ModuleGimbal
			gimbalTransformName = thrustTransform
			gimbalRange = 0.5
			useGimbalResponseSpeed = true
			gimbalResponseSpeed = 10 //worst than 5 ?
		}
		//TODO: ModuleUpgradeModule with float curve
		// MODULE
		// {
			// name = ModuleEngineBellSwitch
			// aslCurve
			// {
				// key = 0
				// key = 0
				// key = 0
				// // @key,0 = #$/MODULE[ModuleEngineBellSwitch]/aslCurve/key,0[1, ]$
				// // @key,0 += 20
				// // @key,0 ^= :^:0 :
				// // @key,1 = #$/MODULE[ModuleEngineBellSwitch]/aslCurve/key,1[1, ]$
				// // @key,1 += 20
				// // @key,1 ^= :^:1 :
				// // @key,2 = 7 0.01
			// }
			// // vacCurve
			// // {
				// // key = 0
				// // key = 0
				// // key = 0
				// // @key,0 = #$/MODULE[ModuleEngineBellSwitch]/vacCurve/key,0[1, ]$
				// // @key,0 += 20
				// // @key,0 ^= :^:0 :
				// // @key,1 = #$/MODULE[ModuleEngineBellSwitch]/vacCurve/key,1[1, ]$
				// // @key,1 += 20
				// // @key,1 ^= :^:1 :
				// // @key,2 = 7 0.01
			// // }
		// }
	}
	MODULE
	{
		name = ModuleUpgradeModule
		type = modify
		tech = upgradeEngine2
		MODULE
		{
			name = ModuleGimbal
			gimbalTransformName = thrustTransform
			gimbalRange = 2
			useGimbalResponseSpeed = true
			gimbalResponseSpeed = 5
		}
		// MODULE
		// {
			// name = ModuleEngineBellSwitch
			// aslCurve
			// {
				
				// key = #$/MODULE[ModuleEngineBellSwitch]/aslCurve/key,0[1, ]$
				// @key += 40
				// key = #$/MODULE[ModuleEngineBellSwitch]/aslCurve/key,1[1, ]$
				// @key,1 += 40
				// key = 7 0.01
			// }
			// vacCurve
			// {
				// key = #$/MODULE[ModuleEngineBellSwitch]/vacCurve/key,0[1, ]$
				// @key += 40
				// key = #$/MODULE[ModuleEngineBellSwitch]/vacCurve/key,1[1, ]$
				// @key,1 += 40
				// key = 7 0.01
			// }
		// }
	}
}




/// =================================================== K =======================================================================================================

// @PART[engine_??KV]:FOR[SpaceRace]
// {
	// PLUME
    // {
        // name = Kerolox-Upper            //pre-fabbed plume you want
        // transformName = thrustTransform //which transform to attach the plume
        // localRotation = 0,0,0           //Optional - Any rotation needed
        // localPosition = 0,0,0           //Any offset needed
        // fixedScale = 1                  //Size adjustment to resize to engine
        // energy = 1                      //Adjust length of plume
        // speed = 1                       //Adjust speed to fit resize, 
                                        // //generally close to 1:1 with scale.
    // }
    // @MODULE[ModuleEngines*]
    // {
        // @name = ModuleEnginesFX
        // %powerEffectName = Kerolox-Upper
		// @runningEffectName = 
    // }
// }

// @PART[engine_??KA]:FOR[SpaceRace]
// {
	// PLUME
    // {
        // name = Kerolox-Lower            //pre-fabbed plume you want
        // transformName = thrustTransform //which transform to attach the plume
        // localRotation = 0,0,0           //Optional - Any rotation needed
        // localPosition = 0,0,0           //Any offset needed
        // fixedScale = 1                  //Size adjustment to resize to engine
        // energy = 1                      //Adjust length of plume
        // speed = 1                       //Adjust speed to fit resize, 
                                        // //generally close to 1:1 with scale.
    // }
    // @MODULE[ModuleEngines*]
    // {
        // @name = ModuleEnginesFX
        // %powerEffectName = Kerolox-Lower
		// @runningEffectName = 
    // }
// }

@PART[engine_05KA]:FOR[SpaceRace]
{
	@cost = 1650//2000
	@mass = 0.5 //TWR : 20->100
	@MODULE[ModuleEngine*]
	{
		@minThrust = 95
		@maxThrust = 95
		@atmosphereCurve
		{
			@key,0 = 0 260
			@key,1 = 1 240
			key = 7 0.01
		}
	}
	// @PLUME[Kerolox-Lower]
    // {
		// flarePosition = 0,0,0.3
		// plumePosition = 0,0,0.2
        // @fixedScale = 0.3
    // }
}

@PART[engine_05KV]:FOR[SpaceRace]
{
	@cost = 280 //2000
	@mass = 0.1 //TWR : 20->100
	@MODULE[ModuleEngine*]
	{
		@minThrust = 18
		@maxThrust = 18
		@atmosphereCurve
		{
			@key,0 = 0 300
			@key,1 = 1 140
			key = 7 0.01
		}
	}
}

/////////////////////////////////////// size 1
@PART[engine_10KA]:FOR[SpaceRace]
{
	@cost = 4500 //3000
	@mass = 1.75 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 350
		@maxThrust = 350
		@atmosphereCurve
		{
			@key,0 = 0 262
			@key,1 = 1 242
			key = 7 0.01
		}
	}
}

@PART[engine_10KV]:FOR[SpaceRace]
{
	@cost = 1150 //1500
	@mass = 0.35 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 70
		@maxThrust = 70
		@atmosphereCurve
		{
			@key,0 = 0 302
			@key,1 = 1 142
			key = 7 0.01
		}
	}
}


/////////////////////////////////////// size 1.5
@PART[engine_15KA]:FOR[SpaceRace]
{
	@cost = 5250 //3500
	@mass = 2.5 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 520
		@maxThrust = 520
		@atmosphereCurve
		{
			@key,0 = 0 264
			@key,1 = 1 244
			key = 7 0.01
		}
	}
}

@PART[engine_15KV]:FOR[SpaceRace]
{
	@cost = 2150 //2000
	@mass = 0.85 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 170
		@maxThrust = 170
		@atmosphereCurve
		{
			@key,0 = 0 304
			@key,1 = 1 144
			key = 7 0.01
		}
	}
}

/////////////////////////////////////// size 2
@PART[engine_20KA]:FOR[SpaceRace]
{
	@cost = 9850 //7000
	@mass = 6 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 1200
		@maxThrust = 1200
		@atmosphereCurve
		{
			@key,0 = 0 266
			@key,1 = 1 246
			key = 7 0.01
		}
	}
}

@PART[engine_20KV]:FOR[SpaceRace]
{
	@cost = 3000 //2500
	@mass = 1.4 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 280
		@maxThrust = 280
		@atmosphereCurve
		{
			@key,0 = 0 306
			@key,1 = 1 146
			key = 7 0.01
		}
	}
}

/////////////////////////////////////// size 3
@PART[engine_30KA]:FOR[SpaceRace]
{
	@cost = 19000//18000
	@mass = 16 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 3200
		@maxThrust = 3200
		@atmosphereCurve
		{
			@key,0 = 0 268
			@key,1 = 1 248
			key = 7 0.01
		}
	}
}

@PART[engine_30KV]:FOR[SpaceRace]
{
	@cost = 4750 //3000
	@mass = 2.2 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 440
		@maxThrust = 440
		@atmosphereCurve
		{
			@key,0 = 0 308
			@key,1 = 1 148
			key = 7 0.01
		}
	}
}

/////////////////////////////////////// size 4
@PART[engine_40KA]:FOR[SpaceRace]
{
	@cost = 30000//33000
	@mass = 32 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 6400
		@maxThrust = 6400
		@atmosphereCurve
		{
			@key,0 = 0 270
			@key,1 = 1 250
			key = 7 0.01
		}
	}
}

@PART[engine_40KV]:FOR[SpaceRace]
{
	@cost = 11500//9000
	@mass = 8 //TWR : 20->100
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 1600
		@maxThrust = 1600
		@atmosphereCurve
		{
			@key,0 = 0 310
			@key,1 = 1 150
			key = 7 0.01
		}
	}
}

@PART[engine_??KA]:FOR[SpaceRace]
{
	//that's what it's used.
	MODULE
	{
		name = ModuleEngineBellSwitchAdd
		// aslCurve
		// {
			// key = 0 270
			// key = 1 250
			// key = 7 0.01
		// }
		// vacCurve
		// {
			// key = 0 290
			// key = 1 170
			// key = 7 0.01
		// }
		addVac = 20
		addAsl = -80
	}
}

@PART[engine_??K*]:AFTER[SpaceRace]
{	
	// %fx_smokeTrail_light  = 0.0, -0.275, -0.0, 0.0, 1.0, -0.10, running_fail
	!MODULE[ModuleSimpleEngineIgniter]{}
	MODULE
	{
		name = ModuleSimpleEngineIgniter
	}
	!RESOURCE[Igniter]{}
	RESOURCE
	{
		name = Igniter
		amount = 1
		maxAmount = 1
	}
	MODULE
	{
		name = ModuleUpgradeResource
		resourceName = Igniter
		TECH-VALUE
		{
			upgradeKerolox1 = 2
			upgradeKerolox2 = 5
		}
	}
	MODULE
	{
		name = ModuleUpgradeCost
		TECH-VALUE
		{
			%upgradeKerolox1 = #$/cost$
			@upgradeKerolox1 *= 0.7
			%upgradeKerolox2 = #$/cost$
			@upgradeKerolox2 *= 0.5
		}
	}
	MODULE
	{
		name = ModuleUpgradeMass
		TECH-VALUE
		{
			%upgradeKerolox1 = #$/mass$
			@upgradeKerolox1 *= 0.5
			%upgradeKerolox2 = #$/mass$
			@upgradeKerolox2 *= 0.25
		}
	}
	MODULE
	{
		//TODO: make it work with ModuleEngineBellSwitch (or the reverse)
		name = ModuleUpgradeEngine
		TECH-VALUE
		{
			tech = upgradeKerolox1
			minThrust = #$/MODULE[ModuleEngine*]/minThrust$
			@minThrust *= 0.6
			maxThrust = #$/MODULE[ModuleEngine*]/maxThrust$
			@maxThrust *= 1.1
			atmosphereIsp = #$/MODULE[ModuleEngine*]/atmosphereCurve/key,1[1, ]$
			@atmosphereIsp += 20
			vacuumIsp = #$/MODULE[ModuleEngine*]/atmosphereCurve/key,0[1, ]$
			@vacuumIsp += 20
			// heatProduction = #$/MODULE[ModuleEngine*]/heatProduction$
			// @heatProduction *= 0.7
		}
		TECH-VALUE
		{
			tech = upgradeKerolox2
			minThrust = #$/MODULE[ModuleEngine*]/minThrust$
			@minThrust *= 0.2
			maxThrust = #$/MODULE[ModuleEngine*]/maxThrust$
			@maxThrust *= 1.2
			atmosphereIsp = #$/MODULE[ModuleEngine*]/atmosphereCurve/key,1[1, ]$
			@atmosphereIsp += 40
			vacuumIsp = #$/MODULE[ModuleEngine*]/atmosphereCurve/key,0[1, ]$
			@vacuumIsp += 40
			// heatProduction = #$/MODULE[ModuleEngine*]/heatProduction$
			// @heatProduction *= 0.5
		}
	}
	// MODULE
	// {
		// name = ModuleUpgradeModuleSetField
		// moduleName = ModuleEnginesFX
		// fieldName = throttleLocked
		// TECH-VALUE
		// {
			// upgradeKerolox1 = True
		// }
	// }
	// MODULE
	// {
		// name = ModuleUpgradeModule
		// type = create
		// tech = fuelcell
		// MODULE
		// {
			// name = ModuleAlternator
			// RESOURCE
			// {
				// name = ElectricCharge
				// rate = #$/MODULE[ModuleEngine*]/maxThrust$
				// @rate /= 10
			// }
		// }
	// }
	MODULE
	{
		name = ModuleUpgradeModule
		type = create
		tech = upgradeEngine1
		MODULE
		{
			name = ModuleGimbal
			gimbalTransformName = thrustTransform
			gimbalRange = 0.5
			useGimbalResponseSpeed = true
			gimbalResponseSpeed = 10 //worst than 5 ?
		}
		//TODO: ModuleUpgradeModule with float curve
		// MODULE
		// {
			// name = ModuleEngineBellSwitch
			// aslCurve
			// {
				// key = 0
				// key = 0
				// key = 0
				// // @key,0 = #$/MODULE[ModuleEngineBellSwitch]/aslCurve/key,0[1, ]$
				// // @key,0 += 20
				// // @key,0 ^= :^:0 :
				// // @key,1 = #$/MODULE[ModuleEngineBellSwitch]/aslCurve/key,1[1, ]$
				// // @key,1 += 20
				// // @key,1 ^= :^:1 :
				// // @key,2 = 7 0.01
			// }
			// // vacCurve
			// // {
				// // key = 0
				// // key = 0
				// // key = 0
				// // @key,0 = #$/MODULE[ModuleEngineBellSwitch]/vacCurve/key,0[1, ]$
				// // @key,0 += 20
				// // @key,0 ^= :^:0 :
				// // @key,1 = #$/MODULE[ModuleEngineBellSwitch]/vacCurve/key,1[1, ]$
				// // @key,1 += 20
				// // @key,1 ^= :^:1 :
				// // @key,2 = 7 0.01
			// // }
		// }
	}
	MODULE
	{
		name = ModuleUpgradeModule
		type = modify
		tech = upgradeEngine2
		MODULE
		{
			name = ModuleGimbal
			gimbalTransformName = thrustTransform
			gimbalRange = 2
			useGimbalResponseSpeed = true
			gimbalResponseSpeed = 5
		}
		// MODULE
		// {
			// name = ModuleEngineBellSwitch
			// aslCurve
			// {
				
				// key = #$/MODULE[ModuleEngineBellSwitch]/aslCurve/key,0[1, ]$
				// @key += 40
				// key = #$/MODULE[ModuleEngineBellSwitch]/aslCurve/key,1[1, ]$
				// @key,1 += 40
				// key = 7 0.01
			// }
			// vacCurve
			// {
				// key = #$/MODULE[ModuleEngineBellSwitch]/vacCurve/key,0[1, ]$
				// @key += 40
				// key = #$/MODULE[ModuleEngineBellSwitch]/vacCurve/key,1[1, ]$
				// @key,1 += 40
				// key = 7 0.01
			// }
		// }
	}
}





/// =================================================== H ================================================================================
// @PART[engine_05HA]:FOR[SpaceRace]
// {
	// @cost = 2700
	// @mass = 0.3 //TWR : 20->100
	// %bulkheadProfiles = size0
	// //TODO: node_stack_top  node size to 0
	// //TODO: node_stack_bottom  node size to 0
	// @MODULE[ModuleEngine*]
	// {
		// @minThrust = 50
		// @maxThrust = 63
		// @atmosphereCurve
		// {
			// @key,0 = 0 250
			// @key,1 = 1 230
			// key = 7 0.01
		// }
	// }
// }

@PART[engine_05HV]:FOR[SpaceRace]
{
	@cost = 1000 //2200
	//@mass = 0.5 //TWR : 5->10 /// 0.35, 0.6  => 0.85 from 0.5
	@mass = 0.9 // 0.75 //worst than normal, because it's too good elsewhere, because of lack of tiny engines at this tech 
	//& balance against "little engine" tech node (as it make others engine irrelevant)
	@MODULE[ModuleEngine*]
	{
		//too little, too good
		// @minThrust = 12
		// @maxThrust = 18
		@minThrust = 25
		@maxThrust = 25
		@atmosphereCurve
		{
			@key,0 = 0 390
			@key,1 = 1 150
			key = 7 0.01
		}
	}
}

/////////////////////////////////////// size 1
@PART[engine_10HA]:FOR[SpaceRace]
{
	@cost = 5400 //5000
	@mass = 4 //TWR : 5->10
	@MODULE[ModuleEngine*]
	{
		@minThrust = 200
		@maxThrust = 200
		@atmosphereCurve
		{
			@key,0 = 0 332
			@key,1 = 1 282
			key = 7 0.01
		}
	}
}

@PART[engine_10HV]:FOR[SpaceRace]
{
	@cost = 2750 //2900 //2k + 10*thrust
	// @mass = 1.7 //TWR : 5->10
	@mass = 2.6 //TWR : 3->7
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 85
		@maxThrust = 85
		@atmosphereCurve
		{
			@key,0 = 0 392
			@key,1 = 1 152
			key = 7 0.01
		}
	}
}


/////////////////////////////////////// size 1.5
@PART[engine_15HA]:FOR[SpaceRace]
{
	@cost = 12000 //8000
	@mass = 12 //TWR : 5->10
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 600
		@maxThrust = 600
		@atmosphereCurve
		{
			@key,0 = 0 334
			@key,1 = 1 284
			key = 7 0.01
		}
	}
}

@PART[engine_15HV]:FOR[SpaceRace]
{
	@cost = 3200
	// @mass = 2.2 //TWR : 5->10
	@mass = 3.3 //TWR : 3->7
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 110
		@maxThrust = 110
		@atmosphereCurve
		{
			@key,0 = 0 394
			@key,1 = 1 154
			key = 7 0.01
		}
	}
}

/////////////////////////////////////// size 2
@PART[engine_20HA]:FOR[SpaceRace]
{
	@cost = 16000 //12000
	@mass = 25 //TWR : 5->10
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 1000
		@maxThrust = 1000
		@atmosphereCurve
		{
			@key,0 = 0 336
			@key,1 = 1 286
			key = 7 0.01
		}
	}
}

@PART[engine_20HV]:FOR[SpaceRace]
{
	@cost = 4500 //3600
	// @mass = 3 //TWR : 5->10
	@mass = 4.8 //TWR : 3->7
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 160
		@maxThrust = 160
		@atmosphereCurve
		{
			@key,0 = 0 396
			@key,1 = 1 156
			key = 7 0.01
		}
	}
}

/////////////////////////////////////// size 3
@PART[engine_30HA]:FOR[SpaceRace]
{
	@cost = 22000 //18000
	@mass = 32 //TWR : 5->10
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 1600
		@maxThrust = 1600
		@atmosphereCurve
		{
			@key,0 = 0 338
			@key,1 = 1 288
			key = 7 0.01
		}
	}
}

@PART[engine_30HV]:FOR[SpaceRace]
{
	@cost = 8250 //5200
	// @mass = 6 //TWR : 5->10
	@mass = 9.9 //TWR : 3->7
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 330
		@maxThrust = 330
		@atmosphereCurve
		{
			@key,0 = 0 398
			@key,1 = 1 158
			key = 7 0.01
		}
	}
}

/////////////////////////////////////// size 4
@PART[engine_40HA]:FOR[SpaceRace]
{
	@cost = 42000 //45000
	@mass = 80 //TWR : 5->10
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 4000
		@maxThrust = 4000
		@atmosphereCurve
		{
			@key,0 = 0 340
			@key,1 = 1 290
			key = 7 0.01
		}
	}
}

@PART[engine_40HV]:FOR[SpaceRace]
{
	@cost = 17000 //18000
	// @mass = 17.5 //TWR : 5->10 (thrust/50)
	@mass = 26.4 //TWR : 3->7 (thrust/33.33)
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 880
		@maxThrust = 880
		@atmosphereCurve
		{
			@key,0 = 0 400
			@key,1 = 1 160
			key = 7 0.01
		}
	}
}

@PART[engine_??HA]:FOR[SpaceRace]
{
	MODULE
	{
		name = ModuleEngineBellSwitchAdd
		addVac = 30
		addAsl = -80
	}
}

@PART[engine_??H*]:AFTER[SpaceRace]
{
	//TODO: set the plume inside engine_clone.
	// %fx_smokeTrail_light  = 0.0, -0.275, -0.0, 0.0, 1.0, -0.10, running_fail
	!MODULE[ModuleSimpleEngineIgniter]{}
	MODULE
	{
		name = ModuleSimpleEngineIgniter
	}
	!RESOURCE[Igniter]{}
	RESOURCE
	{
		name = Igniter
		amount = 1
		maxAmount = 1
	}
	MODULE
	{
		name = ModuleUpgradeResource
		resourceName = Igniter
		TECH-VALUE
		{
			upgradeHydrolox1 = 2
			upgradeHydrolox2 = 5
		}
	}
	MODULE
	{
		name = ModuleUpgradeCost
		TECH-VALUE
		{
			%upgradeHydrolox1 = #$/cost$
			@upgradeHydrolox1 *= 0.7
			%upgradeHydrolox2 = #$/cost$
			@upgradeHydrolox2 *= 0.5
		}
	}
	MODULE
	{
		name = ModuleUpgradeMass
		TECH-VALUE
		{
			%upgradeHydrolox1 = #$/mass$
			@upgradeHydrolox1 *= 0.7
			%upgradeHydrolox2 = #$/mass$
			@upgradeHydrolox2 *= 0.5
		}
	}
	MODULE
	{
		name = ModuleUpgradeEngine
		TECH-VALUE
		{
			tech = upgradeHydrolox1
			minThrust = #$/MODULE[ModuleEngine*]/minThrust$
			@minThrust *= 0.6
			maxThrust = #$/MODULE[ModuleEngine*]/maxThrust$
			@maxThrust *= 1.1
			atmosphereIsp = #$/MODULE[ModuleEngine*]/atmosphereCurve/key,1[1, ]$
			@atmosphereIsp += 30
			vacuumIsp = #$/MODULE[ModuleEngine*]/atmosphereCurve/key,0[1, ]$
			@vacuumIsp += 30
			// heatProduction = #$/MODULE[ModuleEngine*]/heatProduction$
			// @heatProduction *= 0.7
		}
		TECH-VALUE
		{
			tech = upgradeHydrolox2
			minThrust = #$/MODULE[ModuleEngine*]/minThrust$
			@minThrust *= 0.3
			maxThrust = #$/MODULE[ModuleEngine*]/maxThrust$
			@maxThrust *= 1.2
			atmosphereIsp = #$/MODULE[ModuleEngine*]/atmosphereCurve/key,1[1, ]$
			@atmosphereIsp += 60
			vacuumIsp = #$/MODULE[ModuleEngine*]/atmosphereCurve/key,0[1, ]$
			@vacuumIsp += 60
			// heatProduction = #$/MODULE[ModuleEngine*]/heatProduction$
			// @heatProduction *= 0.5
		}
	}
	// MODULE
	// {
		// name = ModuleUpgradeModule
		// type = create
		// tech = fuelcell
		// MODULE
		// {
			// name = ModuleAlternator
			// RESOURCE
			// {
				// name = ElectricCharge
				// rate = #$/MODULE[ModuleEngine*]/maxThrust$
				// @rate /= 10
			// }
		// }
	// }
	MODULE
	{
		name = ModuleUpgradeModule
		type = create
		tech = upgradeEngine1
		MODULE
		{
			name = ModuleGimbal
			gimbalTransformName = thrustTransform
			gimbalRange = 0.5
			useGimbalResponseSpeed = true
			gimbalResponseSpeed = 10 //worst than 5 ?
		}
		//TODO: ModuleUpgradeModule with float curve
		// MODULE
		// {
			// name = ModuleEngineBellSwitch
			// aslCurve
			// {
				// key = 0
				// key = 0
				// key = 0
				// // @key,0 = #$/MODULE[ModuleEngineBellSwitch]/aslCurve/key,0[1, ]$
				// // @key,0 += 20
				// // @key,0 ^= :^:0 :
				// // @key,1 = #$/MODULE[ModuleEngineBellSwitch]/aslCurve/key,1[1, ]$
				// // @key,1 += 20
				// // @key,1 ^= :^:1 :
				// // @key,2 = 7 0.01
			// }
			// // vacCurve
			// // {
				// // key = 0
				// // key = 0
				// // key = 0
				// // @key,0 = #$/MODULE[ModuleEngineBellSwitch]/vacCurve/key,0[1, ]$
				// // @key,0 += 20
				// // @key,0 ^= :^:0 :
				// // @key,1 = #$/MODULE[ModuleEngineBellSwitch]/vacCurve/key,1[1, ]$
				// // @key,1 += 20
				// // @key,1 ^= :^:1 :
				// // @key,2 = 7 0.01
			// // }
		// }
	}
	MODULE
	{
		name = ModuleUpgradeModule
		type = modify
		tech = upgradeEngine2
		MODULE
		{
			name = ModuleGimbal
			gimbalTransformName = thrustTransform
			gimbalRange = 2
			useGimbalResponseSpeed = true
			gimbalResponseSpeed = 5
		}
		// MODULE
		// {
			// name = ModuleEngineBellSwitch
			// aslCurve
			// {
				
				// key = #$/MODULE[ModuleEngineBellSwitch]/aslCurve/key,0[1, ]$
				// @key += 40
				// key = #$/MODULE[ModuleEngineBellSwitch]/aslCurve/key,1[1, ]$
				// @key,1 += 40
				// key = 7 0.01
			// }
			// vacCurve
			// {
				// key = #$/MODULE[ModuleEngineBellSwitch]/vacCurve/key,0[1, ]$
				// @key += 40
				// key = #$/MODULE[ModuleEngineBellSwitch]/vacCurve/key,1[1, ]$
				// @key,1 += 40
				// key = 7 0.01
			// }
		// }
	}
}





/// =================================================== S ================================================================================
@PART[engine_05SA]:FOR[SpaceRace]
{
	//100 amount => 0.5*100 => 50
	@cost = 100
	// 100 amount => 0.75t
	baseMass = 0.01
	@mass = 0.01
	@MODULE[ModuleEngine*]
	{
		@minThrust = 0
		@maxThrust = 120
	}
	@RESOURCE[SolidFuel]
	{
		@amount = 100
		@maxAmount = 100
	}
}

@PART[engine_05SAL]:FOR[SpaceRace]
{
	@cost = 400
	@mass = 0.04
	baseMass = 0.04
	@MODULE[ModuleEngine*]
	{
		@minThrust = 0
		@maxThrust = 150
	}
	@RESOURCE[SolidFuel]
	{
		@amount = 400
		@maxAmount = 400
	}
}

@PART[engine_05SV]:FOR[SpaceRace]
{
	@cost = 100
	@mass = 0.05
	baseMass = 0.05
	@MODULE[ModuleEngine*]
	{
		@minThrust = 0
		@maxThrust = 75
	}
	@RESOURCE[SolidFuel]
	{
		@amount = 80
		@maxAmount = 80
	}
}

/////////////////////////////////////// size 1
@PART[engine_10SA]:FOR[SpaceRace]
{
	@cost = 475
	@mass = 0.05 // 500 => 3.75
	baseMass = 0.05 // 500 => 3.75
	@MODULE[ModuleEngine*]
	{
		@minThrust = 0
		@maxThrust = 500
	}
	@RESOURCE[SolidFuel]
	{
		@amount = 500
		@maxAmount = 500
	}
}

@PART[engine_10SAL]:FOR[SpaceRace]
{
	@cost = 1900
	@mass = 0.2
	baseMass = 0.2
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 0
		@maxThrust = 1000
	}
	@RESOURCE[SolidFuel]
	{
		@amount = 2000
		@maxAmount = 2000
	}
}


/////////////////////////////////////// size 1.5
@PART[engine_15SA]:FOR[SpaceRace]
{
	@cost = 1350
	@mass = 0.15
	baseMass = 0.15
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 0
		@maxThrust = 1500
	}
	@RESOURCE[SolidFuel]
	{
		@amount = 1500
		@maxAmount = 1500
	}
}

@PART[engine_15SAL]:FOR[SpaceRace]
{
	@cost = 5100
	@mass = 0.45
	baseMass = 0.45
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 0
		@maxThrust = 3000
	}
	@RESOURCE[SolidFuel]
	{
		@amount = 6000
		@maxAmount = 6000
	}
}

/////////////////////////////////////// size 2
@PART[engine_20SA]:FOR[SpaceRace]
{
	@cost = 3600
	@mass = 0.5
	baseMass = 0.5
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 0
		@maxThrust = 45000
	}
	@RESOURCE[SolidFuel]
	{
		@amount = 4500
		@maxAmount = 4500
	}
}

@PART[engine_20SAL]:FOR[SpaceRace]
{
	@cost = 14500
	@mass = 2
	baseMass = 2
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 0
		@maxThrust = 9000
	}
	@RESOURCE[SolidFuel]
	{
		@amount = 18000
		@maxAmount = 18000
	}
}

/////////////////////////////////////// size 3
@PART[engine_30SA]:FOR[SpaceRace]
{
	@cost = 15000
	@mass = 1.5
	baseMass = 1.5
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 0
		@maxThrust = 20000
		@atmosphereCurve
		{
			@key,0 = 0 190
			@key,1 = 1 180
			key = 7 0.01
		}
	}
	@RESOURCE[SolidFuel]
	{
		@amount = 20000
		@maxAmount = 20000
	}
}

@PART[engine_30SAL]:FOR[SpaceRace]
{
	@cost = 60000
	@mass = 6
	baseMass = 6
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 0
		@maxThrust = 40000
		@atmosphereCurve
		{
			@key,0 = 0 220
			@key,1 = 1 190
			key = 7 0.01
		}
	}
	@RESOURCE[SolidFuel]
	{
		@amount = 80000
		@maxAmount = 80000
	}
}

/////////////////////////////////////// size 4
// @PART[engine_40SA]:FOR[SpaceRace]
// {
	// @cost = 45000
	// @mass = 80
	// %bulkheadProfiles = size1
	// @MODULE[ModuleEngine*]
	// {
		// @minThrust = 3500
		// @maxThrust = 4000
	// }
// }

// @PART[engine_40SAL]:FOR[SpaceRace]
// {
	// @cost = 18000
	// @mass = 17
	// %bulkheadProfiles = size1
	// @MODULE[ModuleEngine*]
	// {
		// @minThrust = 440
		// @maxThrust = 880
	// }
// }
@PART[engine_??SV]:FOR[SpaceRace]
{
	@MODULE[ModuleEngine*]
	{
		@atmosphereCurve
		{
			@key,0 = 0 200
			@key,1 = 1 100
			key = 7 0.01
		}
	}
}

	// @MODULE[ModuleEngine*]
	// {
		// @atmosphereCurve
		// {
			// @key,0 = 0 190
			// @key,1 = 1 180
			// key = 7 0.01
		// }
	// }
	// // MODULE
	// // {
		// // name = ModuleEngineBellSwitch
		// // aslCurve
		// // {
			// // key = 0 330
			// // key = 1 280
			// // key = 7 0.01
		// // }
		// // vacCurve
		// // {
			// // key = 0 360
			// // key = 1 250
			// // key = 7 0.01
		// // }
	// // }
// }

@PART[engine_??S*]:FOR[SpaceRace]
{
	//add fueltank mass ajustement
	fuelMass = #$/RESOURCE[SolidFuel]/maxAmount$
	@fuelMass *= 0.0075
	@mass = #$/fuelMass$
	@mass *= 0.7
	@mass += #$/baseMass$
	
	MODULE
	{
		name = ModuleUpgradeMass
		TECH-VALUE
		{
			%upgradeFuelTank1 = #$/fuelMass$
			@upgradeFuelTank1 *= 0.6
			@upgradeFuelTank1 += #$/baseMass$
			%upgradeFuelTank2 = #$/fuelMass$
			@upgradeFuelTank2 *= 0.5
			@upgradeFuelTank2 += #$/baseMass$
			%upgradeFuelTank3 = #$/fuelMass$
			@upgradeFuelTank3 *= 0.4
			@upgradeFuelTank3 += #$/baseMass$
			%upgradeFuelTank4 = #$/fuelMass$
			@upgradeFuelTank4 *= 0.3
			@upgradeFuelTank4 += #$/baseMass$
		}
	}
	// MODULE
	// {
		// name = ModuleUpgradeMass
		// TECH-VALUE
		// {
			// %upgradeSolid1 = #$/mass$
			// @upgradeSolid1 *= 0.7
			// %upgradeSolid2 = #$/mass$
			// @upgradeSolid2 *= 0.5
		// }
	// }
	
	MODULE
	{
		name = ModuleUpgradeCost
		TECH-VALUE
		{
			%upgradeSolid1 = #$/cost$
			@upgradeSolid1 *= 0.7
			%upgradeSolid2 = #$/cost$
			@upgradeSolid2 *= 0.5
		}
	}
	
	MODULE
	{
		name = ModuleUpgradeEngine
		TECH-VALUE
		{
			tech = upgradeSolid1
			minThrust = #$/MODULE[ModuleEngine*]/minThrust$
			@minThrust *= 0.7
			maxThrust = #$/MODULE[ModuleEngine*]/maxThrust$
			@maxThrust *= 1.1
			atmosphereIsp = #$/MODULE[ModuleEngine*]/atmosphereCurve/key,1[1, ]$
			@atmosphereIsp += 15
			vacuumIsp = #$/MODULE[ModuleEngine*]/atmosphereCurve/key,0[1, ]$
			@vacuumIsp += 15
			// heatProduction = #$/MODULE[ModuleEngine*]/heatProduction$
			// @heatProduction *= 0.7
		}
		TECH-VALUE
		{
			tech = upgradeSolid2
			minThrust = #$/MODULE[ModuleEngine*]/minThrust$
			@minThrust *= 0.2
			maxThrust = #$/MODULE[ModuleEngine*]/maxThrust$
			@maxThrust *= 1.2
			atmosphereIsp = #$/MODULE[ModuleEngine*]/atmosphereCurve/key,1[1, ]$
			@atmosphereIsp += 30
			vacuumIsp = #$/MODULE[ModuleEngine*]/atmosphereCurve/key,0[1, ]$
			@vacuumIsp += 30
			// heatProduction = #$/MODULE[ModuleEngine*]/heatProduction$
			// @heatProduction *= 0.5
		}
	}
	MODULE
	{
		name = ModuleUpgradeModule
		type = create
		tech = fuelcell
		MODULE
		{
			name = ModuleAlternator
			RESOURCE
			{
				name = ElectricCharge
				rate = #$/MODULE[ModuleEngine*]/maxThrust$
				@rate /= 10
			}
		}
	}
	MODULE
	{
		name = ModuleUpgradeModule
		type = create
		tech = upgradeSolid1
		MODULE
		{
			name = ModuleGimbal
			gimbalTransformName = thrustTransform
			gimbalRange = 0.5
			useGimbalResponseSpeed = true
			gimbalResponseSpeed = 10 //worst than 5 ?
		}
		//TODO: ModuleUpgradeModule with float curve
		// MODULE
		// {
			// name = ModuleEngineBellSwitch
			// aslCurve
			// {
				// key = 0
				// key = 0
				// key = 0
				// // @key,0 = #$/MODULE[ModuleEngineBellSwitch]/aslCurve/key,0[1, ]$
				// // @key,0 += 20
				// // @key,0 ^= :^:0 :
				// // @key,1 = #$/MODULE[ModuleEngineBellSwitch]/aslCurve/key,1[1, ]$
				// // @key,1 += 20
				// // @key,1 ^= :^:1 :
				// // @key,2 = 7 0.01
			// }
			// // vacCurve
			// // {
				// // key = 0
				// // key = 0
				// // key = 0
				// // @key,0 = #$/MODULE[ModuleEngineBellSwitch]/vacCurve/key,0[1, ]$
				// // @key,0 += 20
				// // @key,0 ^= :^:0 :
				// // @key,1 = #$/MODULE[ModuleEngineBellSwitch]/vacCurve/key,1[1, ]$
				// // @key,1 += 20
				// // @key,1 ^= :^:1 :
				// // @key,2 = 7 0.01
			// // }
		// }
	}
	MODULE
	{
		name = ModuleUpgradeModule
		type = modify
		tech = upgradeSolid2
		MODULE
		{
			name = ModuleGimbal
			gimbalTransformName = thrustTransform
			gimbalRange = 2
			useGimbalResponseSpeed = true
			gimbalResponseSpeed = 5
		}
		// MODULE
		// {
			// name = ModuleEngineBellSwitch
			// aslCurve
			// {
				
				// key = #$/MODULE[ModuleEngineBellSwitch]/aslCurve/key,0[1, ]$
				// @key += 40
				// key = #$/MODULE[ModuleEngineBellSwitch]/aslCurve/key,1[1, ]$
				// @key,1 += 40
				// key = 7 0.01
			// }
			// vacCurve
			// {
				// key = #$/MODULE[ModuleEngineBellSwitch]/vacCurve/key,0[1, ]$
				// @key += 40
				// key = #$/MODULE[ModuleEngineBellSwitch]/vacCurve/key,1[1, ]$
				// @key,1 += 40
				// key = 7 0.01
			// }
		// }
	}
}

///// separtron

@PART[sepMotor1]:FOR[SpaceRace]
{
	%rescaleFactor = 0.5
	@cost = 25
	//base: 0.0125
	//for me : 0.0075 * nbSolid * fuelupgrade(0.7=>0.3) here, 0.5, osef upgrades
	@mass = 0.005
	@MODULE[ModuleEngine*]
	{
		//base: 18
		@minThrust = 0
		@maxThrust = 20
	}
	@RESOURCE[SolidFuel]
	{
		//base: 8
		@amount = 1.5
		@maxAmount = 1.5
	}
}


@PART[NBflingatron]:FOR[SpaceRace]
{
	%rescaleFactor = 1
	@cost = 50
	//base: 0.0125
	//for me : 0.0075 * nbSolid * fuelupgrade(0.7=>0.3) here, 0.5, osef upgrades
	@mass = 0.02
	@MODULE[ModuleEngine*]
	{
		@minThrust = 0
		@maxThrust = 80
	}
	@RESOURCE[SolidFuel]
	{
		@amount = 5
		@maxAmount = 5
	}
}

@PART[SYejectatron]:FOR[SpaceRace]
{
	%rescaleFactor = 1.5
	@cost = 100
	//base: 0.0125
	//for me : 0.0075 * nbSolid * fuelupgrade(0.7=>0.3), osef upgrades, cost&partcount is the limiting factor, anyway
	@mass = 0.075
	@MODULE[ModuleEngine*]
	{
		@minThrust = 0
		@maxThrust = 360
	}
	@RESOURCE[SolidFuel]
	{
		@amount = 20
		@maxAmount = 20
	}
}

////////////////////////////////// RCS ///////////////////////////////////////////////////////////////////////////////////////////////////

//TODO: a cooler way to change atmcurve than moduleupgrade?

//////T0
//RLA_rcs_micro
@PART[RLA_rcs_micro]:FOR[SpaceRace]
{
	@MODULE[ModuleRCS]
	{
		//@thrusterPower = 0.25
		@atmosphereCurve
		{
			
			@key,0 = 0 100
			@key,1 = 1 20
			@key,2 = 4 0.01
		}
	}
	MODULE
	{
		name = ModuleUpgradeRcs
		TECH-VALUE
		{
			tech = upgradeRcsIsp1
			vacuumIsp =  120
			vacuumIsp =  30
		}
		TECH-VALUE
		{
			tech = upgradeRcsIsp2
			vacuumIsp =  150
			vacuumIsp =  40
		}
		TECH-VALUE
		{
			tech = upgradeRcsIsp3
			vacuumIsp =  180
			vacuumIsp =  50
		}
	}
}

//////up1

//RCSBlock
@PART[RCSBlock]:FOR[SpaceRace]
{
	@MODULE[ModuleRCS]
	{
		//@thrusterPower = 1
		@atmosphereCurve
		{
			
			@key,0 = 0 140
			@key,1 = 1 50
			@key,2 = 4 0.01
		}
	}
	MODULE
	{
		name = ModuleUpgradeRcs
		TECH-VALUE
		{
			tech = upgradeRcsIsp2
			vacuumIsp =  160
			vacuumIsp =  40
		}
		TECH-VALUE
		{
			tech = upgradeRcsIsp3
			vacuumIsp =  190
			vacuumIsp =  50
		}
	}
}
//RLA_rcs_linear
@PART[RLA_rcs_linear]:FOR[SpaceRace]
{
	@MODULE[ModuleRCS]
	{
		@thrusterPower = 4
		@atmosphereCurve
		{
			
			@key,0 = 0 180
			@key,1 = 1 100
			@key,2 = 4 0.01
		}
	}
	MODULE
	{
		name = ModuleUpgradeRcs
		TECH-VALUE
		{
			tech = upgradeRcsIsp2
			vacuumIsp =  200
			vacuumIsp =  40
		}
		TECH-VALUE
		{
			tech = upgradeRcsIsp3
			vacuumIsp =  220
			vacuumIsp =  50
		}
	}
}
//RLA_rcs_2way
@PART[RLA_rcs_2way]:FOR[SpaceRace]
{
	@mass = 0.05
	@MODULE[ModuleRCS]
	{
		@thrusterPower = 2
		@atmosphereCurve
		{
			
			@key,0 = 0 170
			@key,1 = 1 60
			@key,2 = 4 0.01
		}
	}
	MODULE
	{
		name = ModuleUpgradeRcs
		TECH-VALUE
		{
			tech = upgradeRcsIsp2
			vacuumIsp =  190
			vacuumIsp =  40
		}
		TECH-VALUE
		{
			tech = upgradeRcsIsp3
			vacuumIsp =  210
			vacuumIsp =  50
		}
	}
}

/// up 2

//linearRcs
@PART[linearRcs]:FOR[SpaceRace]
{
	@mass = 0.15 //instead of 0.2
	@MODULE[ModuleRCS]
	{
		@thrusterPower = 16
		@atmosphereCurve
		{
			
			@key,0 = 0 210
			@key,1 = 1 110
			@key,2 = 4 0.01
		}
	}
	MODULE
	{
		name = ModuleUpgradeRcs
		TECH-VALUE
		{
			tech = upgradeRcsIsp3
			vacuumIsp =  230
			vacuumIsp =  50
		}
	}
}
//RLA_rcs_5way
@PART[RLA_rcs_5way]:FOR[SpaceRace]
{
	@mass = 0.2
	@MODULE[ModuleRCS]
	{
		@thrusterPower = 4
		@atmosphereCurve
		{
			
			@key,0 = 0 180
			@key,1 = 1 100
			@key,2 = 4 0.01
		}
	}
	MODULE
	{
		name = ModuleUpgradeRcs
		TECH-VALUE
		{
			tech = upgradeRcsIsp3
			vacuumIsp =  200
			vacuumIsp =  50
		}
	}
}

// @PART[*cs*]:HAS[@MODULE[ModuleRCS]:FOR[SpaceRace]
// {
	// MODULE
	// {
		// name = ModuleUpgradeRcs
		// TECH-VALUE
		// {
			// tech = upgradeRcsIsp1
			// vacuumIsp = #$/MODULE[ModuleRCS]/atmosphereCurve/key,0[1, ]$
			// @vacuumIsp += 10
			// vacuumIsp = #$/MODULE[ModuleRCS]/atmosphereCurve/key,0[1, ]$
			// @vacuumIsp += 10
		// }
		// TECH-VALUE
		// {
			// tech = upgradeRcsIsp2
			// vacuumIsp = #$/MODULE[ModuleRCS]/atmosphereCurve/key,0[1, ]$
			// @vacuumIsp += 20
			// vacuumIsp = #$/MODULE[ModuleRCS]/atmosphereCurve/key,0[1, ]$
			// @vacuumIsp += 20
		// }
		// TECH-VALUE
		// {
			// tech = upgradeRcsIsp3
			// vacuumIsp = #$/MODULE[ModuleRCS]/atmosphereCurve/key,0[1, ]$
			// @vacuumIsp += 30
			// vacuumIsp = #$/MODULE[ModuleRCS]/atmosphereCurve/key,0[1, ]$
			// @vacuumIsp += 30
		// }
	// }
// }


//// TODO: aerospike (poor isp like hypergolic, poor restart, but ASL = ASL bell and Vac = Vac bell)

//// TODO: nuclear (make nuclear work with hydrolox, not only hydro)

@PART[nuclearEngine]:FOR[SpaceRace]
{
	@cost = 5000
	@mass = 5 //
	%bulkheadProfiles = size1
	@MODULE[ModuleEngine*]
	{
		@minThrust = 0
		@maxThrust = 50
		//add oxidizer, because it's simpler
		PROPELLANT
		{
			name = Oxidizer
			ratio = 1.1
		}
	}
	
	MODULE
	{
		name = ModuleUpgradeMass
		TECH-VALUE
		{
			upgradeNuclear = 2.5
		}
	}
}

//// TODO: ion

